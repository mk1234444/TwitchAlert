<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TwitchAlert"
        xmlns:classes="clr-namespace:TwitchAlert.classes" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Name="window" x:Class="TwitchAlert.MainWindow"
        mc:Ignorable="d" Background="{x:Null}" AllowsTransparency="True" WindowStyle="None" SizeToContent="WidthAndHeight" MouseLeftButtonDown="Window_MouseLeftButtonDown" ResizeMode="NoResize" ContentRendered="window_ContentRendered" Topmost="True" Closing="window_Closing" d:DesignWidth="213.75" d:DesignHeight="101.625" Foreground="#FF2C2C2C" Left="0" Top="768" VerticalContentAlignment="Center" VerticalAlignment="Center" ShowInTaskbar="False" Loaded="window_Loaded">
    <Window.Resources>
        <classes:BoolToIsLiveConverter x:Key="BoolToIsLiveConverter"/>

        <Style x:Key="TooltipBorderStyle" TargetType="Border">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="Black" Offset="1"/>
                        <GradientStop Color="#FF050611" Offset="0.463"/>
                        <GradientStop Color="#FF050611" Offset="0.618"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        
        <ToolTip x:Key="StatusTooltip" HasDropShadow="True" Placement="Bottom" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}">
            <Border CornerRadius="7" BorderThickness="1" BorderBrush="#99FF0000" Style="{StaticResource TooltipBorderStyle}">
                <StackPanel Orientation="Vertical" >
                    <TextBlock Text="Status" HorizontalAlignment="Center" Foreground="Yellow" >
                        <TextBlock.TextDecorations>
                            <TextDecoration/>
                        </TextBlock.TextDecorations>
                    </TextBlock>
                    <TextBlock FontSize="10" Height="auto" FontWeight="Normal" TextWrapping="Wrap" Foreground="White" Padding="5,1,5,2" UseLayoutRounding="True" VerticalAlignment="Center" MaxWidth="150"/>
                </StackPanel>
            </Border>
        </ToolTip>

        <ToolTip x:Key="GameTooltip" HasDropShadow="True" Placement="Bottom" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}">
            <Border CornerRadius="7" BorderThickness="1" BorderBrush="#99FF0000" Style="{StaticResource TooltipBorderStyle}">
                <TextBlock FontSize="10" Height="auto" Width="auto" FontWeight="Normal" TextWrapping="NoWrap" Foreground="White" Padding="5,1,5,2" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Border>
        </ToolTip>

        <Storyboard x:Key="SlideUp" Name="SlideUp">
            <DoubleAnimation Storyboard.TargetProperty="(Canvas.Top)" To="{Binding TopPosition}" Duration="0:0:0.8" Storyboard.TargetName="window" >
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:.8" Storyboard.TargetName="rootGrid"/>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rootGrid">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SlideDown" Name="SlideDown" >
            <DoubleAnimation Storyboard.TargetProperty="(Canvas.Top)" To="{Binding BottomPosition}" Duration="0:0:0.8" Storyboard.TargetName="window" >
                <DoubleAnimation.EasingFunction>
                    <BounceEase EasingMode="EaseOut" Bounces="3" Bounciness="2"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To=".20" Duration="0:0:.8" Storyboard.TargetName="rootGrid"/>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rootGrid">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <Style x:Key="SperatorStyle" TargetType="{x:Type Separator}">
            <Style.Resources>
                <LinearGradientBrush x:Key="Seperator_LinearGradientBrush" EndPoint="1,1" MappingMode="RelativeToBoundingBox" StartPoint="0,0">
                    <GradientStop Color="Yellow" Offset="0.757"/>
                    <GradientStop Color="Yellow" Offset="0.276"/>
                    <GradientStop Color="#33FFFF00" Offset="0.004"/>
                    <GradientStop Color="#33FFFF00" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
            <Setter Property="Background" Value="{StaticResource Seperator_LinearGradientBrush}"/>
        </Style>
        <DataTemplate x:Key="ItemTemplate">
            <StackPanel>
                <Image Source="{Binding Thumbnail}" HorizontalAlignment="Left" Height="64" Width="64"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ItemTemplate1">
            <StackPanel>
                <TextBlock Text="{Binding DisplayName}"/>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>

    <Border x:Name="toastBorder" Width="auto"  BorderThickness="1" BorderBrush="Red" Padding="1" CornerRadius="5" Height="85" SizeChanged="toastBorder_SizeChanged" SnapsToDevicePixels="True" Margin="15,15,0,0">
        <Grid x:Name="rootGrid" d:DesignVisibility="Visible"  UseLayoutRounding="True" Height="auto" Width="auto" MinWidth="210" MaxWidth="210"  Visibility="Visible">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#CC00074F" Offset="0.494"/>
                </LinearGradientBrush>
            </Grid.Background>
            <DockPanel x:Name="dockPanel" LastChildFill="False" HorizontalAlignment="Left" >
                <Image x:Name="image" DockPanel.Dock="Left" HorizontalAlignment="Left" Height="Auto" Grid.RowSpan="1"  Width="auto"  Opacity="{Binding Opacity, ElementName=rootGrid}" Source="{Binding Thumbnail}"/>
                <StackPanel DockPanel.Dock="Right" Width="128" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                    <TextBlock x:Name="txtDisplayName" FontWeight="Bold" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="#FF15B5D8" RenderTransformOrigin="0.5,0.5">
                        <Hyperlink x:Name="hyperLink" NavigateUri="{Binding Link}" TextDecorations="None" RequestNavigate="Hyperlink_RequestNavigate" Foreground="#FF00FFF3">
                        <i:Interaction.Triggers>
        					<i:EventTrigger EventName="PreviewMouseLeftButtonDown">
        						<ei:ChangePropertyAction x:Name="changePropertyAction11" TargetName="txtDisplayName" PropertyName="RenderTransform" TargetObject="{Binding ElementName=txtDisplayName}">
        							<ei:ChangePropertyAction.Value>
        								<TransformGroup>
        									<ScaleTransform ScaleX="0.98"/>
        								</TransformGroup>
        							</ei:ChangePropertyAction.Value>
        						</ei:ChangePropertyAction>
        					</i:EventTrigger>
        					<i:EventTrigger EventName="Click">
        						<ei:ChangePropertyAction TargetName="txtDisplayName" PropertyName="RenderTransform" TargetObject="{Binding ElementName=txtDisplayName}"/>
        					</i:EventTrigger>
        					<i:EventTrigger EventName="MouseLeave">
        						<ei:ChangePropertyAction TargetName="txtDisplayName" PropertyName="RenderTransform" TargetObject="{Binding ElementName=txtDisplayName}"/>
        					</i:EventTrigger>
        				</i:Interaction.Triggers>
                        <Run Text="{Binding DisplayName}">
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="TextDecorations" Value="UnderLine"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Style>
                        </Run>
                    </Hyperlink>
                    </TextBlock>
                    <Separator Style="{StaticResource SperatorStyle}" Margin="0" />
                    <TextBlock x:Name="txtGame" Text="{Binding Game}" Height="auto" Width="auto" Foreground="Red" FontSize="12" TextWrapping="NoWrap" MaxWidth="140" Padding="2,0" HorizontalAlignment="Center" TextAlignment="Center" TextTrimming="CharacterEllipsis" VerticalAlignment="Top" ToolTipOpening="txtGame_ToolTipOpening"/>
                    <TextBlock x:Name="txtStatus" Text="{Binding Status}" Height="auto" Width="auto" Foreground="Yellow" FontSize="9" MaxWidth="140" Margin="0,0,3,0" Padding="1,0" HorizontalAlignment="Center" VerticalAlignment="Top" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="{Binding FontSize, RelativeSource={RelativeSource Self}}" MaxHeight="27" MinHeight="27" ToolTip="{StaticResource StatusTooltip}" ToolTipOpening="txtStatus_ToolTipOpening" />
                    <Separator Style="{StaticResource SperatorStyle}"/>
                    <TextBlock x:Name="txtCreatedAt" Text="{Binding StreamCreatedAt}" FontSize="9" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Foreground="#FF16ADCF" Background="#FF040029" Margin="2,0,0,0" TextAlignment="Center" />
                </StackPanel>
            </DockPanel>
            <Border x:Name="brdIsOnline" BorderThickness="1" BorderBrush="Yellow" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="2,0" CornerRadius="5" Margin="0" RenderTransformOrigin="0.5,0.5" Background="#FF530000"  >
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="-12" Y="-10"/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Border.Effect>
                    <DropShadowEffect/>
                </Border.Effect>
                <TextBlock x:Name="txtIsOnline" Text="{Binding IsLive, Converter={StaticResource BoolToIsLiveConverter}}" FontWeight="Bold" Height="Auto" Width="auto" HorizontalAlignment="Center" FontSize="10" FontFamily="Segoe Print" TextWrapping="NoWrap" VerticalAlignment="Center" TextAlignment="Center" FontStyle="Italic" Padding="2,0" Foreground="#FF00FFD1">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Resources>
                                <Storyboard x:Key="FlashIsLive">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}" RepeatBehavior="Forever">
                                        <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FFB9FF00"/>
                                        <EasingColorKeyFrame KeyTime="0:0:1" Value="#FF004BB8"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="Is Live">
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="FlashIsLive_BeginStoryboard"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="FlashIsLive_BeginStoryboard" Storyboard="{StaticResource FlashIsLive}"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

            </Border>
            <!--<Hyperlink x:Name="hyperLink" NavigateUri="{Binding Link}" TextDecorations="None" RequestNavigate="Hyperlink_RequestNavigate" Foreground="#FF00FFF3">-->
            <!--<i:Interaction.Triggers>
        					<i:EventTrigger EventName="PreviewMouseLeftButtonDown">
        						<ei:ChangePropertyAction x:Name="changePropertyAction11" TargetName="txtIsOnline" PropertyName="RenderTransform" TargetObject="{Binding ElementName=txtIsOnline}">
        							<ei:ChangePropertyAction.Value>
        								<TransformGroup>
        									<ScaleTransform ScaleX="0.98"/>
        								</TransformGroup>
        							</ei:ChangePropertyAction.Value>
        						</ei:ChangePropertyAction>
        					</i:EventTrigger>
        					<i:EventTrigger EventName="Click">
        						<ei:ChangePropertyAction TargetName="txtIsOnline" PropertyName="RenderTransform" TargetObject="{Binding ElementName=txtIsOnline}"/>
        					</i:EventTrigger>
        					<i:EventTrigger EventName="MouseLeave">
        						<ei:ChangePropertyAction TargetName="txtIsOnline" PropertyName="RenderTransform" TargetObject="{Binding ElementName=txtIsOnline}"/>
        					</i:EventTrigger>
        				</i:Interaction.Triggers>
                        <Run Text="{Binding IsLive, Converter={StaticResource BoolToIsLiveConverter}}">
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Style.Resources>
                                         <Storyboard x:Key="FlashIsLive" RepeatBehavior="Forever">
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Run.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="White"/>
                                                <EasingColorKeyFrame KeyTime="0:0:1" Value="#FF00A2FF"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Style.Resources>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="Is Live">
                                            <Trigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="FlashIsLive_BeginStoryboard"/>
                                            </Trigger.ExitActions>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard x:Name="FlashIsLive_BeginStoryboard" Storyboard="{StaticResource FlashIsLive}"/>
                                            </Trigger.EnterActions> 
                                        </Trigger>
                                    </Style.Triggers>
                                    </Style>
                            </Run.Style>
                        </Run>
                    </Hyperlink>-->


            <TextBlock x:Name="txtNobodyOnline" Text="Nobody Online" Foreground="#FF05A6A6" FontSize="20" TextAlignment="Center" Padding="0,0,0,0" Width="210" Height="80" VerticalAlignment="Center" Visibility="Collapsed">
                <TextBlock.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF0A0036" Offset="0"/>
                        <GradientStop Color="#FF0A0036" Offset="1"/>
                        <GradientStop Color="#FF060023" Offset="0.527"/>
                    </LinearGradientBrush>
                </TextBlock.Background>
            </TextBlock>

            <TextBlock x:Name="txtUpdating" Text="Updating" HorizontalAlignment="Right" VerticalAlignment="Top" Height="auto" FontSize="8" Foreground="White" Background="Black" Visibility="Collapsed" Margin="0,0,4,0"/>
        </Grid>
    </Border>
</Window>
